######################################################################
# Overrides and Macros
######################################################################

[display_status]

[respond]
# This enables extended messaging in macros

# Pause/Resume Functionality
[pause_resume]
recover_velocity: 100.0
#   When capture/restore is enabled, the speed at which to return to
#   the captured position (in mm/s). Default is 50.0 mm/s.

######################################################################
# START PRINT
######################################################################

[gcode_macro START_PRINT]
gcode:
    #Get Printer built volume dimensions
    {% set X_MAX = printer.toolhead.axis_maximum.x|default(100)|float %}
    {% set Y_MAX = printer.toolhead.axis_maximum.y|default(100)|float %}
    {% set Z_MAX = printer.toolhead.axis_maximum.z|default(100)|float %}

    #Check if gear ratio is defined for the extruder and grab the ratio if it is
    {% if 'gear_ratio' in printer.configfile.config.extruder %}
        {% set FIRST_RATIO = printer.configfile.settings.extruder.gear_ratio.0.0 %}
        {% set SECOND_RATIO = printer.configfile.settings.extruder.gear_ratio.0.1 %}
    {% else %}
        {% set FIRST_RATIO = 1 %}
        {% set SECOND_RATIO = 1 %}
    {% endif %}

    #Check if full steps per rotation is defined for the extruder and grab the value if it is or set the default full rev step count
    {% if 'full_steps_per_rotation' in printer.configfile.config.extruder %}
        {% set STEPS_PER_ROT = printer.configfile.settings.extruder.full_steps_per_rotation %}
    {% else %}
        {% set STEPS_PER_ROT = 200 %}
    {% endif %}


    #Get Nozzle diameter and filament width for conditioning
    {% set NOZZLE = printer.extruder.nozzle_diameter|default(0.4)|float %}
    {% set FILADIA = printer.extruder.filament_diameter|default(1.75)|float %}

    #Set Start coordinates of priming lines
    {% set X_START = 4.0|default(4.0)|float %}
    {% set Y_START = ((range(4,8) | random) * 0.5)|default(2.0)|float %}

    #Calculate Primer line extrusion volume and filament length
    {% set PRIMER_PRESSURE_MULTIPLIER = 8 %}
    {% set PRIMER_CLEAN_MULTIPLIER = 4 %}
    {% set PRIMER_WIDTH = 0.75 * NOZZLE %}
    {% set PRIMER_HEIGHT = 0.70 * NOZZLE %}
    {% set PRIMER_LEN = (X_MAX - X_START) / 3 %}
    {% set PRIMER_SECT = PRIMER_WIDTH * PRIMER_HEIGHT %}
    {% set PRIMER_VOL = PRIMER_SECT * PRIMER_LEN %}
    {% set FILA_SECT = 3.1415 * ( FILADIA / 2.0)**2 %}
    {% set FILA_LENGTH_PRESSURE_PRIME = PRIMER_PRESSURE_MULTIPLIER * PRIMER_VOL / FILA_SECT %}
    {% set FILA_LENGTH_CLEAN_PRIME = PRIMER_CLEAN_MULTIPLIER * PRIMER_VOL / FILA_SECT %}

    #Get Parameters from Slicer GCode
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
    {% set Z_OFFSET_ADJ = params.Z_OFFSET_ADJ|default(0)|float %}
    {% set EXTRUDER_STEP_DISTANCE = params.EXTRUDER_STEP_DISTANCE|default( printer.configfile.settings.extruder.rotation_distance * SECOND_RATIO / (printer.configfile.settings.extruder.microsteps * FIRST_RATIO * STEPS_PER_ROT))|float %}
    {% set PRESSURE_ADVANCE = params.PRESSURE_ADVANCE|default( printer.configfile.settings.extruder.pressure_advance )|float %}
    {% set PRESSURE_ADVANCE_SMOOTH_TIME= params.PRESSURE_ADVANCE_SMOOTH_TIME|default( printer.configfile.settings.extruder.pressure_advance_smooth_time )|float %}
    {% set BED_MESH_PROFILE_NAME = params.BED_MESH_PROFILE_NAME|default('default') %}

    RESPOND MSG="Bed temp in use = {BED_TEMP}"
    RESPOND MSG="Extruder temp in use = {EXTRUDER_TEMP}"
    RESPOND MSG="Z offset adjustment in use = {Z_OFFSET_ADJ}"
    RESPOND MSG="Extruder step distance in use = {EXTRUDER_STEP_DISTANCE}"
    RESPOND MSG="Pressure advance in use = {PRESSURE_ADVANCE}"
    RESPOND MSG="Pressure advance smooth time in use = {PRESSURE_ADVANCE_SMOOTH_TIME}"
    RESPOND MSG="Bed mesh profile name in use = {BED_MESH_PROFILE_NAME}"

    #Apply pre-heat modifiers
    SET_GCODE_OFFSET Z={Z_OFFSET_ADJ}
    SET_EXTRUDER_STEP_DISTANCE EXTRUDER=extruder DISTANCE={EXTRUDER_STEP_DISTANCE}
    SET_PRESSURE_ADVANCE ADVANCE={PRESSURE_ADVANCE}
    SET_PRESSURE_ADVANCE SMOOTH_TIME={PRESSURE_ADVANCE_SMOOTH_TIME}

    #Boiler plate gcode start-up steps
    #set units to mm
    G21
    #use absolute positioning
    G90
    #use relative extrusion mode
    M83
    #reset extruder distance position
    G92 E0.0
    
    RESPOND MSG="Heating Bed..."
    M117 Heating Bed...
    #set heat bed temp and wait for it to stablize
    M190 S{BED_TEMP}
    
    RESPOND MSG="Homing..."
    M117 Homing...
    #BLTouch alarm release
    BLTOUCH_DEBUG COMMAND=reset
    #delay to insure BLTouch resets
    G4 P100
    #home all
    G28
    #wait for buffer to clear
    M400
    
    RESPOND MSG="Z Axis SYNC..."
    M117 Z Axis SYNC...
    #execute Z stepper leveling/sync
    G34
    #wait for buffer to clear
    M400
    
    RESPOND MSG="Bed Leveling..."
    M117 Bed Leveling...
    BED_MESH_PROFILE LOAD={BED_MESH_PROFILE_NAME}
    
    #move to front left corner
    G1 X{X_START} Y{Y_START} F4000
    
    RESPOND MSG="Heating Extruder..."
    M117 Heating Extruder...
    #set extruder temp and wait for it to stablize
    M109 S{EXTRUDER_TEMP}
    
    RESPOND MSG="Cleaning..."
    M117 Cleaning...
    #Move nozzle close to bed
    G1 Z{PRIMER_HEIGHT} F5000
    #Extrude pressure prime rate for 1/3 of bed width
    G1 X{X_START + PRIMER_LEN} E{FILA_LENGTH_PRESSURE_PRIME} F400
    #Extrude clean prime rate for another 1/3 of bed width
    G1 X{X_START + (2 * PRIMER_LEN)} E{FILA_LENGTH_CLEAN_PRIME} F800
    #reset extruder distance position
    G92 E0.0
    #retract a little
    G1 E-.2 F1800
    #quickly wipe away from the purge line
    G1 X{X_MAX - 5} F4000
    #Raise the nozzle and prepare to begin printing
    G1 Z1
    #use absolute extrusion mode
    M82
    #wait for buffer to clear
    M400
    
    RESPOND MSG="Printing..."
    M117 Printing...

######################################################################
# END PRINT
######################################################################

[gcode_macro END_PRINT]
gcode:
    #Get Printer built volume dimensions
    {% set X_MAX = printer.toolhead.axis_maximum.x|default(100)|float %}
    {% set Y_MAX = printer.toolhead.axis_maximum.y|default(100)|float %}
    {% set Z_MAX = printer.toolhead.axis_maximum.z|default(100)|float %}
                                    

    #wait for buffer to clear before shutting down
    M400
    #shutoff extruder heater
    M104 S0
    #shutoff heatbed
    M140 S0
    #shutoff part cooling fan
    M106 S0
    #shutoff second cooling fan if equiped
    M106 P2 S0
    #reset extruder distance
    G92 E0.0
    #switch to relative positioning
    G91
    #quickly retract a small amount of filament before lifting the nozzle away from print to release pressure
    G1 E-2 F9000
    #lift the nozzle and retract a bit more to prepare to store
    G1 Z+5 E-2 X-20 Y-20 F9000
    #switch back to absolure positioning to allow to park the head
    G90
    #move the head to the back left corner
    G1 X5 Y{Y_MAX}
    #uncomment the next line if you want your printer to present the print by moving the head to Z MAX
    #G1 Z{Z_MAX} F6000
    #shutdown the stepper motors
    M84
    RESPOND MSG="Printing Complete..."
    M117 Printing Complete...

######################################################################
# LOAD/UNLOAD FILAMENT
######################################################################
##**-- Thanks Steve for knocking this out! --**##
######################################################################
# LOAD FILAMENT
######################################################################

[gcode_macro LOAD_FILAMENT]
variable_min_extrude_temp: 180                 #edit to your minimum extrusion temp in C
variable_loop_cycle_iterations: 120            #edit to change the number of times the FRS delay macro is called 120 will equal 10 minutes of waiting for activity
variable_fast_speed: 42                        #edit to your desired load speed for the initial fast load in mm/sec
variable_fast_extrude_length: 60              #edit to your desired fast load extrude length in mm
variable_slow_speed: 2                         #edit to your desired load speed for the slow purge in mm/sec set at 2 for coldish extrusion
variable_slow_purge_length: 30                 #edit to your desired slow purge length in mm
gcode:
    SAVE_GCODE_STATE NAME=LOAD_FILAMENT_state
    {% set init_extruder_temp = printer.extruder.target %}
    RESPOND MSG="Initial extruder temperature prior to macro execution was {init_extruder_temp}C..."
    #disable the filement detection code to prevent issues with false runnout signals and processing
    SET_FILAMENT_SENSOR SENSOR=my_sensor ENABLE=0
    M83
    {% if init_extruder_temp < min_extrude_temp %}
        RESPOND MSG="Waiting for load temperature to stabilize..."
        M109 S{min_extrude_temp}
    {% endif %}
    RESPOND MSG="Please remove old filament..."
    {% for wait_for_filament_removal in range(1, loop_cycle_iterations) %}
        _DELAY_ON_FILAMENT_PRESENT
    {% endfor %}   
    RESPOND MSG="Please insert new filament..."
    {% for wait_for_filament_replacement in range(1, loop_cycle_iterations) %}
        _DELAY_ON_FILAMENT_MISSING
    {% endfor %}  
    G4 P5000  #allow some time between filament detected and extruder engage 
    RESPOND MSG="Initial speed load of {fast_extrude_length}mm at {fast_speed}mm/sec"
    G1 E{fast_extrude_length} F{fast_speed * 60}
    RESPOND MSG="Low speed purge of {slow_purge_length}mm at {slow_speed}mm/sec"
    G1 E{slow_purge_length} F{slow_speed * 60}
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    G1 E-{E} F{slow_speed * 60}  #prepare for the purge that occurs in RESUME
    M400
    M109 S{init_extruder_temp}
    SET_FILAMENT_SENSOR SENSOR=my_sensor ENABLE=1
    RESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state

######################################################################
# UNLOAD FILAMENT
######################################################################
[gcode_macro UNLOAD_FILAMENT]
variable_min_extrude_temp: 180     #edit to your minimum extrusion temp in C
variable_init_speed: 3             #edit to your desired extrusion speed for the initial purge and retract in mm/sec
variable_init_purge_length: 3      #edit to your desired initial purge length in mm
variable_init_retract_length: 5    #edit to your desired initial retract length in mm
variable_seconds_before_unload: 5  #edit to your desired wait time in seconds between initial retract and unload retract
variable_unload_speed: 43        #edit to your desired unload speed in mm/sec
variable_unload_retract_length: 80       #edit to your unload retraction length in mm
gcode:
    SAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state
    #disable the filement detection code to prevent issues with false runnout signals and processing
    SET_FILAMENT_SENSOR SENSOR=my_sensor ENABLE=0
    {% set init_extruder_temp = printer.extruder.target %}
    RESPOND MSG="Initial extruder temperature prior to macro execution was {init_extruder_temp}C..."
    M83
    RESPOND MSG="Waiting for unload temperature to stabilize..."
    M109 S{min_extrude_temp}
    RESPOND MSG="Initial purge of {init_purge_length}mm..."
    G1 E{init_purge_length} F{init_speed * 60}
    RESPOND MSG="Initial retract of {init_retract_length}mm..."
    G1 E-{init_retract_length} F{init_speed * 60}
    RESPOND MSG="Pausing for {seconds_before_unload} seconds before high speed unload..."
    G4 P{seconds_before_unload * 1000}
    RESPOND MSG="Unloading {unload_retract_length}mm..."
    G1 E-{unload_retract_length} F{unload_speed * 60}
    M400
    RESPOND MSG="Restoring the extruder to the initial temperature of {init_extruder_temp}C..."
    M109 S{init_extruder_temp}
    RESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state

######################################################################
# PAUSE
######################################################################
##**-- Thanks Steve for knocking this out! --**##
[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# change this if you need more or less extrusion
variable_extrude: 3.0
variable_retract_speed: 50.0
variable_extrude_speed: 50.0
gcode:
    ##### read variables from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    {% set RS = printer["gcode_macro PAUSE"].retract_speed|float * 60 %}
    ##### set park positon for x and y #####
    # default is the back left of bed from your printer.cfg
    {% set x_park = printer.toolhead.axis_minimum.x|float + 2.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 2.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 20.0) %}
        {% set z_safe = 20.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{E} F{RS}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    
######################################################################
# RESUME
######################################################################
##**-- Thanks Steve for knocking this out! --**##
[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    ##### read variables from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    {% set ES = printer["gcode_macro PAUSE"].extrude_speed|float * 60 %}
    ##### end of definitions #####
    G91
    G1 E{E} F{ES}
    RESTORE_GCODE_STATE NAME=PAUSE_state
    BASE_RESUME

######################################################################
# DELAY ON FILAMENT PRESENT
######################################################################

[gcode_macro _DELAY_ON_FILAMENT_PRESENT]
gcode:
    {% set frs_status = { "flag" : printer["filament_switch_sensor my_sensor"].filament_detected } %}
    {% if frs_status.flag == True %}
        G4 P5000
    {% endif %}

######################################################################
# DELAY ON FILAMENT PRESENT
######################################################################

[gcode_macro _DELAY_ON_FILAMENT_MISSING]
gcode:
    {% set frs_status = { "flag" : printer["filament_switch_sensor my_sensor"].filament_detected } %}
    {% if frs_status.flag == False %}
        G4 P5000
    {% endif %}

######################################################################
# M600/Runout
######################################################################

[gcode_macro M600]
gcode:
    PAUSE
    UNLOAD_FILAMENT
    LOAD_FILAMENT
    RESPOND MSG="Please hit the RESUME button to continue"

######################################################################
# CANCEL PRINT
######################################################################

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT

######################################################################
# G29 / MESH 
######################################################################

[gcode_macro G29]
gcode:
    RESPOND MSG="Capturing Mesh..."
    M117 Capturing Mesh...
    BED_MESH_CALIBRATE

######################################################################
# G34 Z Tilt Adjust
######################################################################

[gcode_macro G34]
gcode:
    RESPOND MSG="Adjusting Z Tilt..."
    M117 Adjusting Z Tilt...
    Z_TILT_ADJUST
    M400
    RESPOND MSG="Re-homing..."
    M117 Re-homing...
    G28

######################################################################
# G35 Screw Tilt Calculate / Tramming
######################################################################

[gcode_macro G35]
gcode:
    RESPOND MSG="Calculating Screw Adjustments..."
    M117 Calculating Screw Adjustments...
    SCREWS_TILT_CALCULATE

######################################################################
# ASSISTED TRAMMING
######################################################################

[gcode_macro ASSISTED_TRAMMING]
gcode:
    RESPOND MSG="Homing..."
    M117 Homing...
    G28
    M400
    G35

######################################################################
# BUILD MESH
######################################################################

[gcode_macro BUILD_MESH]
gcode:
    RESPOND MSG="Homing..."
    M117 Homing...
    G28
    M400
    G34
    M400
    G29
    M400
    RESPOND MSG="Mesh complete, remember to store..."
    M117 Mesh complete, remember to store...

######################################################################
# Macro to Search Printer Objects
######################################################################

## Example ##
## This macro will allow you to type search_vars s={some word} from the terminal and
# it will respond with all of the matching items in the printer Object.

[gcode_macro SEARCH_VARS]
gcode:
    {% set search = params.S|lower %}
    {% set ns = namespace() %}
    {% for item in printer  %}
        {% if ' ' in item %}
            {% set ns.path = ['printer', "['%s']" % (item), ''] %}
        {% else %}
            {% set ns.path = ['printer.', item, ''] %}   
        {% endif %} 

        {% if search in ns.path|lower %}
            { action_respond_info(ns.path|join) }
        {% endif %} 

        {% if printer[item].items() %}
            {% for childkey, child in printer[item].items() recursive %}
                {% set ns.path = ns.path[:loop.depth|int + 1] %}

                {% if ' ' in childkey %}
                    {% set null = ns.path.append("['%s']" % (childkey)) %}
                {% else %}
                    {% set null = ns.path.append(".%s" % (childkey)) %}
                {% endif %} 

                {% if child is mapping  %}
                    { loop(child.items()) }
                {% else %}
                    {% if search in ns.path|lower %}
                        { action_respond_info("%s : %s" % (ns.path|join, child)) }   
                    {% endif %} 
                {% endif %} 
                
            {% endfor %}
        {% endif %} 
    {% endfor %}
